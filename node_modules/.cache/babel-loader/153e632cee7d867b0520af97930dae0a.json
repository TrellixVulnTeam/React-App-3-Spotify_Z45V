{"ast":null,"code":"var _jsxFileName = \"/Users/Moyo/Desktop/Roots-Technology-Coding/react-project-spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Listbox from './Listbox';\nimport Detail from './Detail';\nimport Player from './Player';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"af4766b8499a4af1b5a2f7cefd4ca475\"\n});\n\nconst App = () => {\n  _s();\n\n  const spotify = Credentials();\n  const data = [{\n    value: 1,\n    name: 'A'\n  }, {\n    value: 2,\n    name: 'B'\n  }, {\n    value: 3,\n    name: 'C'\n  }];\n  const [token, setToken] = useState('');\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      setToken(tokenResponse.data.access_token);\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + tokenResponse.data.access_token\n        }\n      });\n    });\n  }, [spotify.ClientId, spotify.ClientSecret]);\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n  }\n\n  const searchArtists = async e => {\n    e.preventDefault();\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: searchKey,\n        type: \"artist\"\n      }\n    });\n    setArtists(data.artists.items);\n  };\n\n  const renderArtists = () => {\n    return artists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [artist.images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"100%\",\n        src: artist.images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 99\n      }, this), artist.name]\n    }, artist.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SPOTIFY APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchArtists,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearchKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), renderArtists(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        token: token,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"TsAqWauj2nTnFC0z9TbitVnV4K4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Moyo/Desktop/Roots-Technology-Coding/react-project-spotify-clone/src/App.js"],"names":["React","useEffect","useState","Listbox","Detail","Player","Credentials","axios","SpotifyWebApi","spotifyApi","clientId","App","spotify","data","value","name","token","setToken","searchKey","setSearchKey","artists","setArtists","playingTrack","setPlayingTrack","headers","btoa","ClientId","ClientSecret","method","then","tokenResponse","access_token","chooseTrack","track","searchArtists","e","preventDefault","get","Authorization","params","q","type","items","renderArtists","map","artist","images","length","url","id","target","uri"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Listbox from './Listbox';\nimport Detail from './Detail';\nimport Player from './Player';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"af4766b8499a4af1b5a2f7cefd4ca475\",\n})\n\nconst App = () => {\n\n  const spotify = Credentials();  \n\n  const data = [\n    {value: 1, name: 'A'},\n    {value: 2, name: 'B'},\n    {value: 3, name: 'C'},\n  ]; \n\n  const [token, setToken] = useState('');  \n  const [searchKey, setSearchKey] = useState(\"\")\n  const [artists, setArtists] = useState([])\n  const [playingTrack, setPlayingTrack] = useState()\n\n  useEffect(() => {\n\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    })\n    .then(tokenResponse => {      \n      setToken(tokenResponse.data.access_token);\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n      })      \n    });\n\n  }, [spotify.ClientId, spotify.ClientSecret]); \n\n  function chooseTrack(track) {\n    setPlayingTrack(track)\n  }\n\n  const searchArtists = async (e) => {\n      e.preventDefault()\n      const {data} = await axios.get(\"https://api.spotify.com/v1/search\", {\n          headers: {\n              Authorization: `Bearer ${token}`\n          },\n          params: {\n              q: searchKey,\n              type: \"artist\"\n          }\n      })\n\n      setArtists(data.artists.items)\n  }\n\n  const renderArtists = () => {\n        return artists.map(artist => (\n            <div key={artist.id}>\n                {artist.images.length ? <img width={\"100%\"} src={artist.images[0].url} alt=\"\"/> : <div>No Image</div>}\n                {artist.name}\n            </div>\n        ))\n  }\n  \n  return (\n    <div className=\"container\">\n      <h1>SPOTIFY APP</h1>\n      {token ?\n        <form onSubmit={searchArtists}>\n          <input type=\"text\" onChange={e => setSearchKey(e.target.value)}/>\n              <button type={\"submit\"}>Search</button>\n        </form>\n        : <h2>Please login</h2>\n      }\n      {renderArtists()}\n      <div>\n        <Player token={token} trackUri={playingTrack?.uri} />\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
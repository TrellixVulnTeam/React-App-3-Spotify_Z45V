{"ast":null,"code":"var _jsxFileName = \"/Users/Moyo/Desktop/Roots-Technology-Coding/react-project-spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"../src/login/Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./player/Player\";\nimport { useDataLayerValue } from \"./context/DataLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  // const [token, setToken] = useState(null);\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue(); // run code based on the conditon\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        });\n      });\n      spotify.getPlaylist(\"5HZv36rRXsBdLFpeMBB302\").then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n    }\n\n    console.log(\"I have a token\", token);\n  }, []);\n  console.log(user);\n  console.log(\"alien\", token);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 47\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"foik8K8A62p+aotmH1sMm8vTMMQ=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Moyo/Desktop/Roots-Technology-Coding/react-project-spotify-clone/src/App.js"],"names":["React","useEffect","useState","Login","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists","getPlaylist","response","discover_weekly","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AACA,MAAMC,OAAO,GAAG,IAAIH,aAAJ,EAAhB;;AAEA,SAASI,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAkBC,QAAlB,IAA8BL,iBAAiB,EAArD,CAFa,CAIb;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,IAAI,GAAGT,eAAe,EAA5B;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAY;AACVJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAKAR,MAAAA,OAAO,CAACW,cAAR,CAAuBH,MAAvB;AACAR,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAsBX,IAAD,IAAU;AAC7BE,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPR,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OALD;AAMAF,MAAAA,OAAO,CAACc,gBAAR,GAA2BD,IAA3B,CAAiCE,SAAD,IAAe;AAC7CX,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPK,UAAAA,SAAS,EAAEA;AAFJ,SAAD,CAAR;AAID,OALD;AAMAf,MAAAA,OAAO,CAACgB,WAAR,CAAoB,wBAApB,EAA8CH,IAA9C,CAAoDI,QAAD,IACjDb,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,qBADC;AAEPQ,QAAAA,eAAe,EAAED;AAFV,OAAD,CADV;AAMD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BjB,KAA9B;AACD,GAhCQ,EAgCN,EAhCM,CAAT;AAiCAgB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBjB,KAArB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGA,KAAK,gBAAG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAkC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAD1C;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA/CQC,G;UAE6BF,iB;;;KAF7BE,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"../src/login/Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./player/Player\";\nimport { useDataLayerValue } from \"./context/DataLayer\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  // const [token, setToken] = useState(null);\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  // run code based on the conditon\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n      spotify.getPlaylist(\"5HZv36rRXsBdLFpeMBB302\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n    }\n    console.log(\"I have a token\", token);\n  }, []);\n  console.log(user);\n  console.log(\"alien\", token);\n\n  return (\n    <div className=\"App\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
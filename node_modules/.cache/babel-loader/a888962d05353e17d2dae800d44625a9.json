{"ast":null,"code":"var _jsxFileName = \"/Users/Moyo/Desktop/Roots-Technology-Coding/react-project-spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Dropdown from './Dropdown';\nimport Listbox from './Listbox';\nimport Detail from './Detail';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const spotify = Credentials();\n  console.log('RENDERING APP.JS');\n  const data = [{\n    value: 1,\n    name: 'A'\n  }, {\n    value: 2,\n    name: 'B'\n  }, {\n    value: 3,\n    name: 'C'\n  }];\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState({\n    selectedGenre: '',\n    listOfGenresFromAPI: []\n  });\n  const [playlist, setPlaylist] = useState({\n    selectedPlaylist: '',\n    listOfPlaylistFromAPI: []\n  });\n  const [tracks, setTracks] = useState({\n    selectedTrack: '',\n    listOfTracksFromAPI: []\n  });\n  const [trackDetail, setTrackDetail] = useState(null);\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      setToken(tokenResponse.data.access_token);\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + tokenResponse.data.access_token\n        }\n      }).then(genreResponse => {\n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items\n        });\n      });\n    });\n  }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\n  const genreChanged = val => {\n    setGenres({\n      selectedGenre: val,\n      listOfGenresFromAPI: genres.listOfGenresFromAPI\n    });\n    axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      });\n    });\n    console.log(val);\n  };\n\n  const playlistChanged = val => {\n    console.log(val);\n    setPlaylist({\n      selectedPlaylist: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    });\n  };\n\n  const buttonClicked = e => {\n    e.preventDefault();\n    axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(tracksResponse => {\n      setTracks({\n        selectedTrack: tracks.selectedTrack,\n        listOfTracksFromAPI: tracksResponse.data.items\n      });\n    });\n  };\n\n  const listboxClicked = val => {\n    const currentTracks = [...tracks.listOfTracksFromAPI];\n    const trackInfo = currentTracks.filter(t => t.track.id === val);\n    setTrackDetail(trackInfo[0].track);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: buttonClicked,\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        label: \"Genre :\",\n        options: genres.listOfGenresFromAPI,\n        selectedValue: genres.selectedGenre,\n        changed: genreChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        label: \"Playlist :\",\n        options: playlist.listOfPlaylistFromAPI,\n        selectedValue: playlist.selectedPlaylist,\n        changed: playlistChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6 row form-group px-0\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success col-sm-12\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Listbox, {\n          items: tracks.listOfTracksFromAPI,\n          clicked: listboxClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), trackDetail && /*#__PURE__*/_jsxDEV(Detail, { ...trackDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7A/EJdDN3f9exkbzHNBTFIKpPjo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Moyo/Desktop/Roots-Technology-Coding/react-project-spotify-clone/src/App.js"],"names":["React","useState","useEffect","Dropdown","Listbox","Detail","Credentials","axios","App","spotify","console","log","data","value","name","token","setToken","genres","setGenres","selectedGenre","listOfGenresFromAPI","playlist","setPlaylist","selectedPlaylist","listOfPlaylistFromAPI","tracks","setTracks","selectedTrack","listOfTracksFromAPI","trackDetail","setTrackDetail","headers","btoa","ClientId","ClientSecret","method","then","tokenResponse","access_token","genreResponse","categories","items","genreChanged","val","playlistResponse","playlists","playlistChanged","buttonClicked","e","preventDefault","tracksResponse","listboxClicked","currentTracks","trackInfo","filter","t","track","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Dropdown from './Dropdown';\nimport Listbox from './Listbox';\nimport Detail from './Detail';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\n\nconst App = () => {\n\n  const spotify = Credentials();  \n\n  console.log('RENDERING APP.JS');\n\n  const data = [\n    {value: 1, name: 'A'},\n    {value: 2, name: 'B'},\n    {value: 3, name: 'C'},\n  ]; \n\n  const [token, setToken] = useState('');  \n  const [genres, setGenres] = useState({selectedGenre: '', listOfGenresFromAPI: []});\n  const [playlist, setPlaylist] = useState({selectedPlaylist: '', listOfPlaylistFromAPI: []});\n  const [tracks, setTracks] = useState({selectedTrack: '', listOfTracksFromAPI: []});\n  const [trackDetail, setTrackDetail] = useState(null);\n\n  useEffect(() => {\n\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    })\n    .then(tokenResponse => {      \n      setToken(tokenResponse.data.access_token);\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n      })\n      .then (genreResponse => {        \n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items\n        })\n      });\n      \n    });\n\n  }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]); \n\n  const genreChanged = val => {\n    setGenres({\n      selectedGenre: val, \n      listOfGenresFromAPI: genres.listOfGenresFromAPI\n    });\n\n    axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n      method: 'GET',\n      headers: { 'Authorization' : 'Bearer ' + token}\n    })\n    .then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      })\n    });\n\n    console.log(val);\n  }\n\n  const playlistChanged = val => {\n    console.log(val);\n    setPlaylist({\n      selectedPlaylist: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    });\n  }\n\n  const buttonClicked = e => {\n    e.preventDefault();\n\n    axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization' : 'Bearer ' + token\n      }\n    })\n    .then(tracksResponse => {\n      setTracks({\n        selectedTrack: tracks.selectedTrack,\n        listOfTracksFromAPI: tracksResponse.data.items\n      })\n    });\n  }\n\n  const listboxClicked = val => {\n\n    const currentTracks = [...tracks.listOfTracksFromAPI];\n\n    const trackInfo = currentTracks.filter(t => t.track.id === val);\n\n    setTrackDetail(trackInfo[0].track);\n  }\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={buttonClicked}>        \n          <Form label=\"Genre :\" options={genres.listOfGenresFromAPI} selectedValue={genres.selectedGenre} changed={genreChanged} />\n          <Form label=\"Playlist :\" options={playlist.listOfPlaylistFromAPI} selectedValue={playlist.selectedPlaylist} changed={playlistChanged} />\n          <div className=\"col-sm-6 row form-group px-0\">\n            <button type='submit' className=\"btn btn-success col-sm-12\">\n              Search\n            </button>\n          </div>\n          <div className=\"row\">\n            <Listbox items={tracks.listOfTracksFromAPI} clicked={listboxClicked} />\n            {trackDetail && <Detail {...trackDetail} /> }\n          </div>        \n      </form>\n    </div>\n    \n    \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Moyo/Desktop/Roots-Technology-Coding/react-project-spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Dropdown from './Dropdown';\nimport \"./App.css\";\nimport Listbox from './Listbox';\nimport Detail from './Detail';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const spotify = Credentials();\n  const data = [{\n    value: 1,\n    name: 'A'\n  }, {\n    value: 2,\n    name: 'B'\n  }, {\n    value: 3,\n    name: 'C'\n  }];\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState({\n    selectedGenre: '',\n    listOfGenresFromAPI: []\n  });\n  const [playlist, setPlaylist] = useState({\n    selectedPlaylist: '',\n    listOfPlaylistFromAPI: []\n  });\n  const [tracks, setTracks] = useState({\n    selectedTrack: '',\n    listOfTracksFromAPI: []\n  });\n  const [trackDetail, setTrackDetail] = useState(null);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      setToken(tokenResponse.data.access_token);\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + tokenResponse.data.access_token\n        }\n      }).then(genreResponse => {\n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items\n        });\n      });\n    });\n  }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\n  const searchArtists = async e => {\n    e.preventDefault();\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: searchKey,\n        type: \"artist\"\n      }\n    });\n    setArtists(data.artists.items);\n  };\n\n  const genreChanged = val => {\n    setGenres({\n      selectedGenre: val,\n      listOfGenresFromAPI: genres.listOfGenresFromAPI\n    });\n    axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      });\n    });\n    console.log(val);\n  };\n\n  const playlistChanged = val => {\n    console.log(val);\n    setPlaylist({\n      selectedPlaylist: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    });\n  };\n\n  const buttonClicked = e => {\n    e.preventDefault();\n    axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(tracksResponse => {\n      setTracks({\n        selectedTrack: tracks.selectedTrack,\n        listOfTracksFromAPI: tracksResponse.data.items\n      });\n    });\n  };\n\n  const listboxClicked = val => {\n    const currentTracks = [...tracks.listOfTracksFromAPI];\n    const trackInfo = currentTracks.filter(t => t.track.id === val);\n    setTrackDetail(trackInfo[0].track);\n  };\n\n  const renderArtists = () => {\n    return artists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [artist.images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"100%\",\n        src: artist.images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 99\n      }, this), artist.name]\n    }, artist.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [token ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchArtists,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearchKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }, this), renderArtists()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"yZVDV+r14HdWE0O63jyJseX8Aks=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Moyo/Desktop/Roots-Technology-Coding/react-project-spotify-clone/src/App.js"],"names":["React","useEffect","useState","Dropdown","Listbox","Detail","Credentials","axios","App","spotify","data","value","name","token","setToken","genres","setGenres","selectedGenre","listOfGenresFromAPI","playlist","setPlaylist","selectedPlaylist","listOfPlaylistFromAPI","tracks","setTracks","selectedTrack","listOfTracksFromAPI","trackDetail","setTrackDetail","searchKey","setSearchKey","artists","setArtists","headers","btoa","ClientId","ClientSecret","method","then","tokenResponse","access_token","genreResponse","categories","items","searchArtists","e","preventDefault","get","Authorization","params","q","type","genreChanged","val","playlistResponse","playlists","console","log","playlistChanged","buttonClicked","tracksResponse","listboxClicked","currentTracks","trackInfo","filter","t","track","id","renderArtists","map","artist","images","length","url","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Dropdown from './Dropdown';\nimport \"./App.css\";\nimport Listbox from './Listbox';\nimport Detail from './Detail';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\n\nconst App = () => {\n\n  const spotify = Credentials();  \n\n  const data = [\n    {value: 1, name: 'A'},\n    {value: 2, name: 'B'},\n    {value: 3, name: 'C'},\n  ]; \n\n  const [token, setToken] = useState('');  \n  const [genres, setGenres] = useState({selectedGenre: '', listOfGenresFromAPI: []});\n  const [playlist, setPlaylist] = useState({selectedPlaylist: '', listOfPlaylistFromAPI: []});\n  const [tracks, setTracks] = useState({selectedTrack: '', listOfTracksFromAPI: []});\n  const [trackDetail, setTrackDetail] = useState(null);\n  const [searchKey, setSearchKey] = useState(\"\")\n  const [artists, setArtists] = useState([])\n\n  useEffect(() => {\n\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    })\n    .then(tokenResponse => {      \n      setToken(tokenResponse.data.access_token);\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n      })\n      .then (genreResponse => {        \n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items\n        })\n      });\n      \n    });\n\n  }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]); \n\n  const searchArtists = async (e) => {\n      e.preventDefault()\n      const {data} = await axios.get(\"https://api.spotify.com/v1/search\", {\n          headers: {\n              Authorization: `Bearer ${token}`\n          },\n          params: {\n              q: searchKey,\n              type: \"artist\"\n          }\n      })\n\n      setArtists(data.artists.items)\n  }\n\n\n  const genreChanged = val => {\n    setGenres({\n      selectedGenre: val, \n      listOfGenresFromAPI: genres.listOfGenresFromAPI\n    });\n\n    axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n      method: 'GET',\n      headers: { 'Authorization' : 'Bearer ' + token}\n    })\n    .then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      })\n    });\n\n    console.log(val);\n  }\n\n  const playlistChanged = val => {\n    console.log(val);\n    setPlaylist({\n      selectedPlaylist: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    });\n  }\n\n  const buttonClicked = e => {\n    e.preventDefault();\n\n    axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`, {\n      method: 'GET',\n      headers: {\n        'Authorization' : 'Bearer ' + token\n      }\n    })\n    .then(tracksResponse => {\n      setTracks({\n        selectedTrack: tracks.selectedTrack,\n        listOfTracksFromAPI: tracksResponse.data.items\n      })\n    });\n  }\n\n  const listboxClicked = val => {\n\n    const currentTracks = [...tracks.listOfTracksFromAPI];\n\n    const trackInfo = currentTracks.filter(t => t.track.id === val);\n\n    setTrackDetail(trackInfo[0].track);\n\n  }\n\n  const renderArtists = () => {\n        return artists.map(artist => (\n            <div key={artist.id}>\n                {artist.images.length ? <img width={\"100%\"} src={artist.images[0].url} alt=\"\"/> : <div>No Image</div>}\n                {artist.name}\n            </div>\n        ))\n  }\n\n  \n  return (\n    <div className=\"container\">\n      {token ?\n                    <form onSubmit={searchArtists}>\n                        <input type=\"text\" onChange={e => setSearchKey(e.target.value)}/>\n                        <button type={\"submit\"}>Search</button>\n                    </form>\n\n                    : <h2>Please login</h2>\n                }\n\n                {renderArtists()}\n    </div>\n    \n    \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}